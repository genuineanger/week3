name: CI/CD for GKE with Blue-Green Deployment

on:
  push:
    branches:
      - '**'  # Trigger for all branches

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_ZONE: us-central1
  GAR_REPO: my-repo
  GKE_ZONE: us-central1
  IMAGE_NAME: ${{ github.event.repository.name }}

jobs:
  ci-cd:
    name: CI/CD for ${{ github.ref_name }}
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Authenticate with GCP
    - id: auth
      uses: google-github-actions/auth@v0
      with:
        credentials_json: '${{ secrets.GKE_SA_KEY }}'

    # Step 3: Configure Docker for Artifact Registry
    - name: Docker Authentication
      run: |
        gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://$GAR_ZONE-docker.pkg.dev

    # Step 4: Set up GKE credentials
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: autopilot-cluster-1
        location: $GKE_ZONE

    # Step 5: Build and Push Docker Image
    - name: Build and Push Docker Image
      run: |
        IMAGE_TAG=$GITHUB_SHA
        docker build -t "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE_NAME:$IMAGE_TAG" .
        docker push "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE_NAME:$IMAGE_TAG"

    # Step 6: Deploy to Blue or Green Environment
    - name: Deploy Application
      run: |
        if [[ "${{ github.ref_name }}" == "main" ]]; then
          ENV="production"
          kubectl apply -f k8s/deployment-blue.yaml
          kubectl apply -f k8s/service-blue.yaml
        else
          ENV="test"
          kubectl apply -f k8s/deployment-green.yaml
          kubectl apply -f k8s/service-green.yaml

    # Optional: Verify Deployments
    - name: Verify Deployment
      run: |
        kubectl get deployments
        kubectl get services
